#! /bin/bash -w
#
# run this ONLY if you are SURE everything works!
#   2021-06-02  - initial writing
#   2021-10-12  - misc fixes
#
       # https://stackoverflow.com/questions/226703/how-do-i-prompt-for-yes-no-cancel-input-in-a-linux-shell-script
while true; do
    read -p "Is everything working properly?? " yn
    case $yn in
        [Yy]* ) break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

echo $(date) ' - 01_create_db.bsh'                                                                ;
bash -vx  01_create_db.bsh                     > 01_create_db.bsh.log                  2>&1       ;
grep --line-number   '^ERROR '                   01_create_db.bsh.log                             ;


echo $(date) ' - 02a_initial_preparation.bsh'                                                     ;
bash -vx  02a_initial_preparation.bsh          > 02a_initial_preparation.bsh.log       2>&1       ;
grep --line-number ERROR                         02a_initial_preparation.bsh.log                  ;


echo $(date) ' - 02b_test_initial_preparation_keys.bsh'                                             ;
bash -vx  02b_test_initial_preparation_keys.bsh  > 02b_test_initial_preparation_keys.bsh.log  2>&1  ;
grep --line-number   '^ERROR'                    02b_test_initial_preparation_keys.bsh.log          ;


echo $(date) ' - 02c_initial_preparation.bsh'                                                     ;
bash -vx  02c_initial_preparation.bsh          > 02c_initial_preparation.bsh.log       2>&1       ;
grep  --line-number  '^ERROR'                    02c_initial_preparation.bsh.log                  ;

echo $(date) ' - 02d_initial_preparation.bsh'                                                     ;
bash -vx  02d_initial_preparation.bsh          > 02d_initial_preparation.bsh.log       2>&1       ;
grep --line-number '^ERROR'                      02d_initial_preparation.bsh.log                  ;

echo $(date) ' - 03_long_part.bsh'                                                                ;
bash -vx  03_long_part.bsh                     > 03_long_part.bsh.log                  2>&1       ;
grep --line-number '^ERROR'                      03_long_part.bsh.log                             ;

echo $(date) ' - 04_sed_changes.bsh'                                                              ;
bash -vx  04_sed_changes.bsh                   > 04_sed_changes.bsh.log                2>&1       ;
grep  --line-number  '^ERROR'                    04_sed_changes.bsh.log                           ;     

echo $(date) ' - 05_convert_back_to_mariadb.bsh'                                                  ;
bash -vx  05_convert_back_to_mariadb.bsh       > 05_convert_back_to_mariadb.bsh.log    2>&1       ;
grep  --line-number  '^ERROR'                    05_convert_back_to_mariadb.bsh.log               ;

echo $(date) ' - 06_concat_phonemes.bsh'                                                          ;
bash -vx  06_concat_phonemes.bsh               > 06_concat_phonemes.bsh.log            2>&1       ;
grep --line-number   '^ERROR'                    06_concat_phonemes.bsh.log                       ;


echo $(date) ' - 07a_alter_keys.bsh'                                                              ;
bash -vx  07a_alter_keys.bsh                    > 07a_alter_keys.bsh.log               2>&1       ;
grep  --line-number '^ERROR'                     07a_alter_keys.bsh.log                           ;

echo $(date) ' - 07b_alter_keys_test.bsh'                                                         ;
bash -vx  07b_alter_keys_test.bsh                    > 07b_alter_keys_test.bsh.log     2>&1       ;
grep  --line-number '^ERROR'                            07b_alter_keys_test.bsh.log               ;

echo $(date) ' - 08_final_sed_rename.bsh'                                                         ;
bash -vx  08_final_sed_rename.bsh              > 08_final_sed_rename.bsh.log           2>&1       ;
grep  --line-number  '^ERROR'                    08_final_sed_rename.bsh.log                      ;

echo $(date) ' - 09_move_columns.bsh'                                                             ;
bash -vx  09_move_columns.bsh                  > 09_move_columns.bsh.log               2>&1       ;
grep  --line-number  '^ERROR'                    09_move_columns.bsh.log                          ;

echo $(date) ' - 10a_combine_stimword_phoneme.bsh'                                                 ;
bash -vx  10a_combine_stimword_phoneme.bsh      > 10a_combine_stimword_phoneme.bsh.log   2>&1      ;
grep  --line-number  '^ERROR'                     10a_combine_stimword_phoneme.bsh.log             ;

echo $(date) ' - 10b_combine_stimword_phoneme_test.bsh'                                             ;
bash -vx  10b_combine_stimword_phoneme_test.bsh  > 10b_combine_stimword_phoneme_test.bsh.log  2>&1  ;
grep '^ERROR'                                      10b_combine_stimword_phoneme_test.bsh.log        ;
grep  --line-number   '^COUNT(\|^0'                10b_combine_stimword_phoneme_test.bsh.log        ;

echo $(date) ' - 11_display_table_counts.bsh'                                                      ;
bash -vx  11_display_table_counts.bsh           >       11_display_table_counts.bsh.log  2>&1      ;
grep  --line-number    '^[0-9]'                         11_display_table_counts.bsh.log            ;
grep  --line-number   '^ERROR'                          11_display_table_counts.bsh.log            ;
grep  --line-number   '^COUNT(\|^[0-9]'                 11_display_table_counts.bsh.log            ;

echo $(date)                                                                                      ;

grep '^ERROR'  *.bsh.log                                                                         ;


echo "finished 00_master.bsh!"                                                                    ;

exit                                                                                              ;
